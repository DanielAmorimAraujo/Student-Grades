/*
Name: Daniel Araujo
Date: 10 Aug 18
Title: Student Grades
Purpose: to use a 2-d array to store multiple students' test scores and to find the average for the tests or a specific student
*/
package student.grades;

import java.text.DecimalFormat; //imports classes needed to format averages to two decimal plaes

public class StudentGradesGUI extends javax.swing.JFrame {

    DecimalFormat x = new DecimalFormat("###.00"); //declares DecimalFormat x for rounding to two decimal places (including 0s)
    String[][] studentGrades = new String[15][5]; //declares 2-d string array named studentGrades with 15 rows and 5 columns to store the student's name and their 4 test grades
        
    int intCounter = 0; //declaring integer variable intCounter that will be used to track the row number of the studentGrades array
    
    /**
     * Creates new form StudentGradesGUI
     */
    public StudentGradesGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        lblTest1 = new javax.swing.JLabel();
        txtTest1 = new javax.swing.JTextField();
        lblTest2 = new javax.swing.JLabel();
        txtTest2 = new javax.swing.JTextField();
        lblTest3 = new javax.swing.JLabel();
        txtTest3 = new javax.swing.JTextField();
        lblTest4 = new javax.swing.JLabel();
        txtTest4 = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnList = new javax.swing.JButton();
        btnStudentAverage = new javax.swing.JButton();
        btnCourseAverage = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        scrOutput = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Sitka Heading", 1, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 0, 0));
        lblTitle.setText("Student Grades");

        lblFirstName.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblFirstName.setText("First Name:");

        txtFirstName.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N

        lblLastName.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblLastName.setText("Last Name:");

        txtLastName.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N

        lblTest1.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblTest1.setText("Test 1");

        txtTest1.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N

        lblTest2.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblTest2.setText("Test 2");

        txtTest2.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N

        lblTest3.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblTest3.setText("Test 3");

        txtTest3.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N

        lblTest4.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        lblTest4.setText("Test 4");

        txtTest4.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N

        btnAdd.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnList.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        btnList.setText("List");
        btnList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListActionPerformed(evt);
            }
        });

        btnStudentAverage.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        btnStudentAverage.setText("Student Average");
        btnStudentAverage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentAverageActionPerformed(evt);
            }
        });

        btnCourseAverage.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        btnCourseAverage.setText("Course Average");
        btnCourseAverage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCourseAverageActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Sitka Text", 0, 14)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        txtOutput.setEditable(false);
        txtOutput.setColumns(20);
        txtOutput.setFont(new java.awt.Font("Sitka Small", 0, 13)); // NOI18N
        txtOutput.setLineWrap(true);
        txtOutput.setRows(5);
        txtOutput.setWrapStyleWord(true);
        scrOutput.setViewportView(txtOutput);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(103, 103, 103))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(lblFirstName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblLastName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTest2)
                            .addComponent(lblTest3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblTest1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtTest1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblTest4)
                                    .addGap(16, 16, 16)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtTest2)
                                        .addComponent(txtTest3, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                        .addComponent(txtTest4)))))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnExit)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnStudentAverage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCourseAverage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scrOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLastName)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTest1)
                    .addComponent(txtTest1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd)
                    .addComponent(btnStudentAverage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTest2)
                    .addComponent(txtTest2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnList)
                    .addComponent(btnCourseAverage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTest3)
                    .addComponent(txtTest3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTest4)
                    .addComponent(txtTest4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(scrOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        //if statement that executes if any of the test text field boxes do not have text
        if (txtTest1.getText().equals("") || txtTest2.getText().equals("") || txtTest3.getText().equals("") || txtTest4.getText().equals("")) {
            txtOutput.setText("Please input values for all the tests."); //outputs the text to the txtOutput text area informing the user that not all the test text fields have values
        } else { //executes if all the test textfields have values
            studentGrades[intCounter][0] = txtFirstName.getText() + " " + txtLastName.getText(); //sets the first column of the studentGrades array in the intCounter row as the inputted name (adds the first and last name together)
            studentGrades[intCounter][1] = txtTest1.getText(); //sets the second column of the studentGrades array in the intCounter row as the inputted test 1 value
            studentGrades[intCounter][2] = txtTest2.getText(); //sets the third column of the studentGrades array in the intCounter row as the inputted test 2 value
            studentGrades[intCounter][3] = txtTest3.getText(); //sets the fourth column of the studentGrades array in the intCounter row as the inputted test 3 value
            studentGrades[intCounter][4] = txtTest4.getText(); //sets the fifth column of the studentGrades array in the intCounter row as the inputted test 4 value
            intCounter++; //increases the intCounter value by 1 - keeps track of row number
            //if statmement that executes once 15 students have been inputted
            if (intCounter == 15) {
                btnAdd.setEnabled(false); //disables the Add (btnAdd) button
                txtOutput.setText("You currently have 15 students stored. You cannot add any more."); //outputs the text to the txtOutput text area informing the user they have reached 15 students and cannot add any more
            }
            
            txtFirstName.setText(""); //clears the text in the txtFirstName text field so that it can be easily used again
            txtLastName.setText(""); //clears the text in the txtLastName text field so that it can be easily used again
            txtTest1.setText(""); //clears the text in the txtTest1 text field so that it can be easily used again
            txtTest2.setText(""); //clears the text in the txtTest2 text field so that it can be easily used again
            txtTest3.setText(""); //clears the text in the txtTest3 text field so that it can be easily used again
            txtTest4.setText(""); //clears the text in the txtTest4 text field so that it can be easily used again
            txtOutput.setText(""); //clears the text in the txtOutput text field so that output information does not carry forward
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListActionPerformed
        list(""); //calls on the list() method and passes "" for the parameter
    }//GEN-LAST:event_btnListActionPerformed

    private void btnStudentAverageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentAverageActionPerformed
        String strOutput = ""; //declares string variable strOutput and sets it equal to ""
        String strName = txtFirstName.getText() + " " + txtLastName.getText(); //declares string variable strName and sets it equal to the students first and last name (joins the text in the txtFirstName text field and the txtLastName text field with a space in between)
        
        int intIndex = -1; //declares integer variable intIndex and sets it equal to -1 - used to determine whether the inputted name (strName) is in the studentGrades array
        int intSum = 0; //declares integer variable intSum and sets it equal to 0 - used to store the sum of the student's grade
        double dblAverage; //declares double variable - used to store the student's average
        
        //for loop that runs through the first column (index 0) of the studentsGrade array list and looks for the inputted name
        for (int i = 0; i < studentGrades.length; i++)
            if (studentGrades[i][0] != null) //if statement that executes if there is a name in the array at the specific index
                if (studentGrades[i][0].equals(strName)) //if statement that executes if the name in the array at the specific index matches the inputted name (strName)
                    intIndex = i; //sets the intIndex variable equal to the index at which the name was found
        
        //if statement that executes if intIndex is equal to -1 - when no name in the array matched the inputted name (strName)
        if (intIndex == -1)
            txtOutput.setText("There is no student with that name."); //outputs the text to the txtOutput text area informing the user that their is no student with that name
        else { //else statement that exectues if the inputted name (strName) matched a name in the array (intIndex != -1)
            //for loop that runs through the four tests (indexes 1 - 4) at the index that the name was found (intIndex)
            for (int j = 1; j < 5; j++)
                intSum += Integer.parseInt(studentGrades[intIndex][j]); //adds the test scores together - converst string to integer
            
            dblAverage = intSum / 4.0; //sets the dblAverage variable equal to the sum of the student's test (intSum) divided by the number of tests (4) - calculates average
            strOutput += studentGrades[intIndex][0] + "'s average is: " + x.format(dblAverage) + "\n"; //adds the students name and their average (rounded to two decimal places using x.format) to the strOutput variable
            strOutput += "\nStudent's Grades:"; //adds the heading to list the rest of the students information
            list(strOutput); //calls on the list() method and passes strOutput for the parameter
        }
    }//GEN-LAST:event_btnStudentAverageActionPerformed

    private void btnCourseAverageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCourseAverageActionPerformed
        String strOutput = ""; //declares string variable strOutput and sets it equal to ""
        double dblAverage; //declares double variable - used to store the student's average
        
        //for loop that runs through the test columns (indexes 1-4) of the studentsGrade array
        for (int j = 1; j < 5; j++) {
            int intSum = 0; //declares integer variable intSum and sets it equal to 0 - used to store the sum of the student's grade - resets to 0 for each test (i index)
            double dblCounter = 0; //declares double variable dblCounter and sets it equal to 0 - used to store the number of students - resets to 0 for each test (i index)
            //for loop that runs through the rows (indexes 1-14) of the studentsGrade array
            for (int i = 0; i < 15; i++)
                //if statement that executes if there is a value in the array at the specific indexes
                if (studentGrades[i][j] != null) {
                    intSum += Integer.parseInt(studentGrades[i][j]); //adds the test scores together - converst string to integer
                    dblCounter++; //increases by 1 to keep track of the number of students
                }
            dblAverage = intSum / dblCounter; //sets the dblAverage variable equal to the sum of the tests for a specific test (intSum) divided by the number of students (dblCounter) - calculates average
            strOutput += "Test " + j + "'s average is " + x.format(dblAverage) + "\n"; //adds the test number and its average (rounded to two decimal places using x.format) to the strOutput variable
        }
        strOutput += "\nStudent's Grades:"; //adds the heading to list the rest of the students information
        list(strOutput); //calls on the list() method and passes strOutput for the parameter
    }//GEN-LAST:event_btnCourseAverageActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0); //closes the application
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * the beginning part of the output string must be passed for the parameter when the method is called
     * adds the list of students and their grades to the end of the parameter and outputs it in the txtOutput text area
     * @param strOutput - string variable that stores the beginning part of the output (nothing, a student's average, or the test averages)
     */
    public void list(String strOutput) {
        //for loop that runs through the rows (i index: 0-14) of the studentGrades array
        for (int i = 0; i < 15; i++) {
            if (studentGrades[i][0] != null) { //if statement that executes if there is a value in the array at the specific indexes
                strOutput += "\n" + studentGrades[i][0] + ": "; //adds a new line escape sequence (so that each student is on their own line), the student's name at the specific index (colum index is 0 as all of the names are stored in the first column), and a colon to the strOutput
                for (int j = 1; j < 5; j++) //for loop that runs through the columns (j index: 1-4) of the studentGrades array (just the tests)
                    strOutput += studentGrades[i][j] + " "; //adds the test values at the specific index and a space to the strOutput variable
            }
        }
        txtOutput.setText(strOutput); //outputs the strOutput variable to the txtOutput text area
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentGradesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentGradesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentGradesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentGradesGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentGradesGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCourseAverage;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnList;
    private javax.swing.JButton btnStudentAverage;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblTest1;
    private javax.swing.JLabel lblTest2;
    private javax.swing.JLabel lblTest3;
    private javax.swing.JLabel lblTest4;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JScrollPane scrOutput;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextArea txtOutput;
    private javax.swing.JTextField txtTest1;
    private javax.swing.JTextField txtTest2;
    private javax.swing.JTextField txtTest3;
    private javax.swing.JTextField txtTest4;
    // End of variables declaration//GEN-END:variables
}
